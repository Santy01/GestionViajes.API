// <auto-generated />
using System;
using GestionViajes.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionViajes.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250919022259_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionViajes.API.Models.Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinoId"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DestinoId");

                    b.HasIndex("Nombre");

                    b.HasIndex("Pais");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            DestinoId = 1,
                            Costo = 250.00m,
                            Descripcion = "Antigua ciudad inca en la cordillera de los Andes",
                            FechaCreacion = new DateTime(2025, 9, 19, 2, 22, 58, 357, DateTimeKind.Utc).AddTicks(3771),
                            Nombre = "Machu Picchu",
                            Pais = "Perú"
                        },
                        new
                        {
                            DestinoId = 2,
                            Costo = 180.00m,
                            Descripcion = "Icónica estatua de Cristo en Río de Janeiro",
                            FechaCreacion = new DateTime(2025, 9, 19, 2, 22, 58, 357, DateTimeKind.Utc).AddTicks(3952),
                            Nombre = "Cristo Redentor",
                            Pais = "Brasil"
                        },
                        new
                        {
                            DestinoId = 3,
                            Costo = 150.00m,
                            Descripcion = "Majestuosas cascadas en la frontera argentino-brasileña",
                            FechaCreacion = new DateTime(2025, 9, 19, 2, 22, 58, 357, DateTimeKind.Utc).AddTicks(3954),
                            Nombre = "Cataratas del Iguazú",
                            Pais = "Argentina"
                        },
                        new
                        {
                            DestinoId = 4,
                            Costo = 200.00m,
                            Descripcion = "Antigua ciudad maya y una de las nuevas siete maravillas del mundo",
                            FechaCreacion = new DateTime(2025, 9, 19, 2, 22, 58, 357, DateTimeKind.Utc).AddTicks(3955),
                            Nombre = "Chichén Itzá",
                            Pais = "México"
                        },
                        new
                        {
                            DestinoId = 5,
                            Costo = 300.00m,
                            Descripcion = "Parque nacional con impresionantes formaciones rocosas en la Patagonia",
                            FechaCreacion = new DateTime(2025, 9, 19, 2, 22, 58, 357, DateTimeKind.Utc).AddTicks(3957),
                            Nombre = "Torres del Paine",
                            Pais = "Chile"
                        });
                });

            modelBuilder.Entity("GestionViajes.API.Models.Turista", b =>
                {
                    b.Property<int>("TuristaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TuristaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TuristaId");

                    b.HasIndex("Apellido");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Turistas");

                    b.HasData(
                        new
                        {
                            TuristaId = 1,
                            Apellido = "Mendoza",
                            Email = "carlos.mendoza@example.com",
                            FechaRegistro = new DateTime(2025, 9, 19, 2, 22, 58, 358, DateTimeKind.Utc).AddTicks(213),
                            Nombre = "Carlos",
                            Telefono = "+51 987654321"
                        },
                        new
                        {
                            TuristaId = 2,
                            Apellido = "González",
                            Email = "maria.gonzalez@example.com",
                            FechaRegistro = new DateTime(2025, 9, 19, 2, 22, 58, 358, DateTimeKind.Utc).AddTicks(399),
                            Nombre = "María",
                            Telefono = "+54 9 11 1234-5678"
                        },
                        new
                        {
                            TuristaId = 3,
                            Apellido = "Silva",
                            Email = "jose.silva@example.com",
                            FechaRegistro = new DateTime(2025, 9, 19, 2, 22, 58, 358, DateTimeKind.Utc).AddTicks(400),
                            Nombre = "José",
                            Telefono = "+55 11 98765-4321"
                        },
                        new
                        {
                            TuristaId = 4,
                            Apellido = "López",
                            Email = "ana.lopez@example.com",
                            FechaRegistro = new DateTime(2025, 9, 19, 2, 22, 58, 358, DateTimeKind.Utc).AddTicks(402),
                            Nombre = "Ana",
                            Telefono = "+52 55 1234-5678"
                        },
                        new
                        {
                            TuristaId = 5,
                            Apellido = "Rodríguez",
                            Email = "pedro.rodriguez@example.com",
                            FechaRegistro = new DateTime(2025, 9, 19, 2, 22, 58, 358, DateTimeKind.Utc).AddTicks(403),
                            Nombre = "Pedro",
                            Telefono = "+56 9 8765-4321"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
